<launch>

  <arg name="is_register_lidar2camera_tf" default="true" />
  <arg name="is_publish_projection_matrix" default="true" />
  <arg name="is_publish_camera_info" default="true" />
  <arg name="camera_calib" default="$(env HOME)/.autoware/longma_test/calibration/camera_lidar_3d/flir/20220628_camera_lidar_RT.yml"/>

  <!-- calibration_publisher -->
  <include file="$(find runtime_manager)/launch_files/calibration_publisher.launch">
    <arg name="file" value="$(arg camera_calib)" />
    <arg name="register_lidar2camera_tf" value="$(arg is_register_lidar2camera_tf)" />
    <arg name="publish_extrinsic_mat" value="$(arg is_publish_projection_matrix)" />
    <arg name="publish_camera_info" value="$(arg is_publish_camera_info)" />
    <arg name="image_topic_src" default="/image_raw"/>
    <arg name="camera_frame" default="blackfly_camera"/>
    <arg name="camera_id" default="/flir_adk"/>
  </include>

  <arg name="sync" default="false" />
  <!-- points2image -->
  <node pkg="points2image" type="points2image" name="points2image">
      <param name="points_node" value="/points_raw"/>
      <param name="image_topic_src" value="/flir_adk/image_raw"/>
      <param name="camera_info_topic" value="/flir_adk/camera_info"/>
      <param name="projection_matrix_topic" value="/flir_adk/projection_matrix"/>
      <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
  </node>

  <!-- points2image -->
  <!-- image2points: 将图片的 RGB 值赋给点云 -->
  <!-- <node pkg="points2image" type="image2points" name="image2points" output="screen">
      <param name="points_node" value="/points_raw"/>
      <param name="image_topic_src" value="/flir_adk/image_raw"/>
      <param name="camera_info_topic" value="/flir_adk/camera_info"/>
      <param name="projection_matrix_topic" value="/flir_adk/projection_matrix"/>
      <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
  </node> -->

<!-- transform rgb_pointcloud to map frame -->
  <!-- <include file="$(find points_preprocessor)/launch/rgb_cloud_transformer.launch" >
    <arg name="input_point_topic" value="/points_rgb" />
    <arg name="output_point_topic" value="/points_rgb_transformed" />
    <arg name="target_frame" value="map" />
  </include> -->

  <!-- <include file="$(find pixel_cloud_fusion)/launch/pixel_cloud_fusion.launch">
    <arg name="points_src" default="/points_raw" /> 
    <arg name="image_src" default="/flir_adk/image_raw" /> 
    <arg name="camera_info_src" default="/flir_adk/camera_info" /> 
  </include> -->


  <include file="$(find points_preprocessor)/launch/ray_ground_filter.launch"/>

  <include file="$(find object_map)/launch/wayarea2grid.launch"/>

  <!-- lidar_euclidean_cluster_detect -->
  <include file="$(find lidar_euclidean_cluster_detect)/launch/lidar_euclidean_cluster_detect.launch">
    <arg name="points_node" default="/points_no_ground" />
    <arg name="use_vector_map" default="true" />
    <arg name="cluster_merge_threshold" default="0.6" />
    <arg name="clustering_distance" default="0.5" />
  </include>

  <!-- <include file="$(find lidar_kf_contour_track)/launch/lidar_kf_contour_track.launch"/> -->
  <include file="$(find imm_ukf_pda_track)/launch/imm_ukf_pda_track.launch">
    <arg name="tracker_input_topic" default="/detection/lidar_detector/objects_filtered" />
    <arg name="tracker_output_topic" default="/detection/object_tracker/objects" />
    <arg name="merge_distance_threshold" default="0.5"/>
  </include>

  <include file="$(find naive_motion_predict)/launch/naive_motion_predict.launch">
    <arg name="input_topic" default="/detection/object_tracker/objects"/>
  </include>
  
  <include file="$(find vision_darknet_detect)/launch/vision_yolo3_detect.launch">
    <arg name="gpu_device_id" default="0"/>
    <arg name="score_threshold" default="0.50"/>
    <arg name="nms_threshold" default="0.45"/>

    <arg name="network_definition_file" default="$(find vision_darknet_detect)/darknet/cfg/yolov3.cfg"/>
    <arg name="pretrained_model_file" default="$(find vision_darknet_detect)/darknet/data/yolov3.weights"/>
    <arg name="names_file" default="$(find vision_darknet_detect)/darknet/cfg/coco.names"/>

    <arg name="camera_id" default=""/>
    <arg name="image_src" default="/flir_adk/image_raw"/>
  </include>

<include file="$(find range_vision_fusion)/launch/range_vision_fusion.launch">
  <arg name="camera_info_src" default="/flir_adk/camera_info"/>
</include>

</launch>
   